/// A Prompt is a reusable entity that can store text used for post-processing
/// titles and descriptions of Stories or other content. Multiple Reporters or Stories
/// can reference the same Prompt, making it reusable across the system.
model Prompt {
    /// The unique identifier for the Prompt.
    id          String    @id @default(ulid())
    /// A short description or name for the prompt.
    name        String
    /// A short description or name for the prompt.
    description String?
    /// The actual text/content of the prompt used for post-processing.
    text        String?
    /// Timestamp when the Prompt was created.
    createdAt   DateTime  @default(now()) @db.Timestamptz()
    /// Timestamp when the Prompt was last updated.
    updatedAt   DateTime  @default(now()) @updatedAt @db.Timestamptz()
    /// Soft-delete timestamp; if set, the Prompt is considered deleted.
    deletedAt   DateTime?

    /// The user who created this Prompt (its owner).
    creator   User   @relation(fields: [creatorId], references: [id])
    /// Foreign key referencing the creator of this Prompt.
    creatorId String

    /// The Reporters that reference this Prompt for post-processing.
    reporters Reporter[]
    /// The Stories that reference this Prompt for post-processing.
    stories   Story[]
}
